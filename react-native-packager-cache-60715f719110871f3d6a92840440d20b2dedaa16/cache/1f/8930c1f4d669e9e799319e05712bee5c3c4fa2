Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/React/SpringClockMobile/app/components/EmployeeList.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var EmployeeList = function (_Component) {
  babelHelpers.inherits(EmployeeList, _Component);

  function EmployeeList(props) {
    babelHelpers.classCallCheck(this, EmployeeList);

    var _this = babelHelpers.possibleConstructorReturn(this, (EmployeeList.__proto__ || Object.getPrototypeOf(EmployeeList)).call(this, props));

    _this.state = {
      isLoading: true,
      bizId: ''
    };
    return _this;
  }

  babelHelpers.createClass(EmployeeList, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _this2 = this;

      var id = 2;
      fetch('https://spring-clock.herokuapp.com/rest/employees/' + id).then(function (response) {
        return response.json();
      }).then(function (responseJson) {
        var ds = new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2, r3, r4, r5, r6) {
            return r1 !== r2;
          } });
        _this2.setState({
          isLoading: false,
          dataSource: ds.cloneWithRows(responseJson)
        });
      }).catch(function (error) {
        console.error(error);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.state.isLoading) {
        return _react2.default.createElement(
          _reactNative.View,
          { style: { flex: 1, paddingTop: 20 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 32
            }
          },
          _react2.default.createElement(_reactNative.ActivityIndicator, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 33
            }
          })
        );
      }

      return _react2.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 39
          }
        },
        _react2.default.createElement(_reactNative.ListView, {
          dataSource: this.state.dataSource,
          renderRow: function renderRow(rowData) {
            return _react2.default.createElement(
              _reactNative.Text,
              { style: styles.listStyle, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 43
                }
              },
              _react2.default.createElement(
                _reactNative.Text,
                { style: styles.userStyle, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 44
                  }
                },
                rowData.user + " "
              ),
              _react2.default.createElement(
                _reactNative.Text,
                { style: styles.listStyle, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 48
                  }
                },
                "Business ID: " + rowData.bizId,
                ',',
                "Week Time: " + rowData.weekTimeInHours,
                ',',
                "Pay Rate: " + rowData.payRate,
                ',',
                "Period Pay: " + rowData.totalPay,
                ',',
                "Clock In Status: " + rowData.clocked
              )
            );
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 40
          }
        })
      );
    }
  }]);
  return EmployeeList;
}(_react.Component);

var styles = {
  listStyle: {
    textAlign: 'left',
    borderRadius: 0,
    borderWidth: 1,
    backgroundColor: '#F3F1F1',
    padding: 10
  },

  userStyle: {
    textAlign: 'center',
    borderRadius: 10,
    borderWidth: 1,
    borderColor: 'blue',
    fontWeight: 'bold',
    fontSize: 18
  }

};

exports.default = EmployeeList;